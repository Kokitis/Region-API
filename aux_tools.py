from pprint import pprint
def iso_code(io):
	""" Returns either the country code or contry name as specified by the ISO format """
	country_codes = {'ABW': 'Aruba',
						 'AFG': 'Afghanistan',
						 'AGO': 'Angola',
						 'AIA': 'Anguilla',
						 'ALA': 'Aland Islands',
						 'ALB': 'Albania',
						 'AND': 'Andorra',
						 'ANT': 'Netherlands Antilles',
						 'ARE': 'United Arab Emirates',
						 'ARG': 'Argentina',
						 'ARM': 'Armenia',
						 'ASM': 'American Samoa',
						 'ATA': 'Antarctica',
						 'ATF': 'French Southern Territories',
						 'ATG': 'Antigua and Barbuda',
						 'AUS': 'Australia',
						 'AUT': 'Austria',
						 'AZE': 'Azerbaijan',
						 'BDI': 'Burundi',
						 'BEL': 'Belgium',
						 'BEN': 'Benin',
						 'BES': 'Bonaire, Sint Eustatius and Saba',
						 'BFA': 'Burkina Faso',
						 'BGD': 'Bangladesh',
						 'BGR': 'Bulgaria',
						 'BHR': 'Bahrain',
						 'BHS': 'Bahamas',
						 'BLZ': 'Belize',
						 'BMU': 'Bermuda',
						 'BOL': 'Bolivia, Plurinational State of',
						 'BRA': 'Brazil',
						 'BRB': 'Barbados',
						 'BRN': 'Brunei Darussalam',
						 'BTN': 'Bhutan',
						 'BUR': 'Burma',
						 'BVT': 'Bouvet Island',
						 'BWA': 'Botswana',
						 'CAF': 'Central African Republic',
						 'CAN': 'Canada',
						 'CCK': 'Cocos (Keeling) Islands',
						 'CHE': 'Switzerland',
						 'CHL': 'Chile',
						 'CHN': 'China',
						 'CMR': 'Cameroon',
						 'COD': 'Congo, the Democratic Republic of the',
						 'COG': 'Congo',
						 'COK': 'Cook Islands',
						 'COL': 'Colombia',
						 'COM': 'Comoros',
						 'CPV': 'Cabo Verde',
						 'CRI': 'Costa Rica',
						 'CSK': 'Czechoslovakia',
						 'CUB': 'Cuba',
						 'CXR': 'Christmas Island',
						 'CYM': 'Cayman Islands',
						 'CYP': 'Cyprus',
						 'CZE': 'Czech Republic',
						 'DEU': 'Germany',
						 'DJI': 'Djibouti',
						 'DMA': 'Dominica',
						 'DNK': 'Denmark',
						 'DOM': 'Dominican Republic',
						 'DZA': 'Algeria',
						 'ECU': 'Ecuador',
						 'EGY': 'Egypt',
						 'ERI': 'Eritrea',
						 'ESH': 'Western Sahara',
						 'ESP': 'Spain',
						 'EST': 'Estonia',
						 'ETH': 'Ethiopia',
						 'FIN': 'Finland',
						 'FJI': 'Fiji',
						 'FLK': 'Falkland Islands',
						 'FRA': 'France',
						 'FRO': 'Faroe Islands',
						 'FSM': 'Micronesia, Federated States of',
						 'GAB': 'Gabon',
						 'GBR': 'United Kingdom',
						 'GEO': 'Georgia',
						 'GGY': 'Guernsey',
						 'GHA': 'Ghana',
						 'GIB': 'Gibraltar',
						 'GIN': 'Guinea',
						 'GLP': 'Guadeloupe',
						 'GMB': 'Gambia',
						 'GNB': 'Guinea-Bissau',
						 'GNQ': 'Equatorial Guinea',
						 'GRC': 'Greece',
						 'GRD': 'Grenada',
						 'GRL': 'Greenland',
						 'GTM': 'Guatemala',
						 'GUF': 'French Guiana',
						 'GUM': 'Guam',
						 'GUY': 'Guyana',
						 'HKG': 'Hong Kong',
						 'HMD': 'Heard Island and McDonald Islands',
						 'HND': 'Honduras',
						 'HRV': 'Croatia',
						 'HTI': 'Haiti',
						 'HUN': 'Hungary',
						 'IDN': 'Indonesia',
						 'IMN': 'Isle of Man',
						 'IND': 'India',
						 'IOT': 'British Indian Ocean Territory',
						 'IRL': 'Ireland',
						 'IRN': 'Iran, Islamic Republic of',
						 'IRQ': 'Iraq',
						 'ISL': 'Iceland',
						 'ISR': 'Israel',
						 'ITA': 'Italy',
						 'JAM': 'Jamaica',
						 'JEY': 'Jersey',
						 'JOR': 'Jordan',
						 'JPN': 'Japan',
						 'KAZ': 'Kazakhstan',
						 'KEN': 'Kenya',
						 'KGZ': 'Kyrgyzstan',
						 'KHM': 'Cambodia',
						 'KIR': 'Kiribati',
						 'KNA': 'Saint Kitts and Nevis',
						 'KOR': 'Korea, Republic of',
						 'KWT': 'Kuwait',
						 'LAO': "Lao People's Democratic Republic",
						 'LBN': 'Lebanon',
						 'LBR': 'Liberia',
						 'LBY': 'Libya',
						 'LCA': 'Saint Lucia',
						 'LIE': 'Liechtenstein',
						 'LKA': 'Sri Lanka',
						 'LSO': 'Lesotho',
						 'LTU': 'Lithuania',
						 'LUX': 'Luxembourg',
						 'LVA': 'Latvia',
						 'MAC': 'Macao',
						 'MAF': 'Saint Martin (French part)',
						 'MAR': 'Morocco',
						 'MCO': 'Monaco',
						 'MDA': 'Moldova, Republic of',
						 'MDG': 'Madagascar',
						 'MDV': 'Maldives',
						 'MEX': 'Mexico',
						 'MHL': 'Marshall Islands',
						 'MKD': 'Macedonia',
						 'MLI': 'Mali',
						 'MLT': 'Malta',
						 'MMR': 'Myanmar',
						 'MNE': 'Montenegro',
						 'MNG': 'Mongolia',
						 'MNP': 'Northern Mariana Islands',
						 'MOZ': 'Mozambique',
						 'MRT': 'Mauritania',
						 'MSR': 'Montserrat',
						 'MTQ': 'Martinique',
						 'MUS': 'Mauritius',
						 'MWI': 'Malawi',
						 'MYS': 'Malaysia',
						 'MYT': 'Mayotte',
						 'NAM': 'Namibia',
						 'NCL': 'New Caledonia',
						 'NER': 'Niger',
						 'NFK': 'Norfolk Island',
						 'NGA': 'Nigeria',
						 'NIC': 'Nicaragua',
						 'NIU': 'Niue',
						 'NLD': 'Netherlands',
						 'NOR': 'Norway',
						 'NPL': 'Nepal',
						 'NRU': 'Nauru',
						 'NZL': 'New Zealand',
						 'OMN': 'Oman',
						 'PAK': 'Pakistan',
						 'PAN': 'Panama',
						 'PCN': 'Pitcairn',
						 'PER': 'Peru',
						 'PHL': 'Philippines',
						 'PLW': 'Palau',
						 'PNG': 'Papua New Guinea',
						 'POL': 'Poland',
						 'PRI': 'Puerto Rico',
						 'PRK': "Korea, Democratic People's Republic of",
						 'PRT': 'Portugal',
						 'PRY': 'Paraguay',
						 'PSE': 'Palestine, State of',
						 'ROU': 'Romania',
						 'RUS': 'Russian Federation',
						 'RWA': 'Rwanda',
						 'SAU': 'Saudi Arabia',
						 'SCG': 'Serbia and Montenegro',
						 'SDN': 'Sudan',
						 'SEN': 'Senegal',
						 'SGP': 'Singapore',
						 'SGS': 'South Georgia and the South Sandwich Islands',
						 'SHN': 'Saint Helena, Ascension and Tristan da Cunha',
						 'SJM': 'Svalbard and Jan Mayen',
						 'SLB': 'Solomon Islands',
						 'SLE': 'Sierra Leone',
						 'SLV': 'El Salvador',
						 'SMR': 'San Marino',
						 'SOM': 'Somalia',
						 'SPM': 'Saint Pierre and Miquelon',
						 'SRB': 'Serbia',
						 'SSD': 'South Sudan',
						 'STP': 'Sao Tome and Principe',
						 'SUN': 'Soviet Union',
						 'SUR': 'Suriname',
						 'SVK': 'Slovakia',
						 'SVN': 'Slovenia',
						 'SWE': 'Sweden',
						 'SWZ': 'Swaziland',
						 'SXM': 'Sint Maarten (Dutch part)',
						 'SYC': 'Seychelles',
						 'SYR': 'Syrian Arab Republic',
						 'TCA': 'Turks and Caicos Islands',
						 'TCD': 'Chad',
						 'TGO': 'Togo',
						 'THA': 'Thailand',
						 'TJK': 'Tajikistan',
						 'TKL': 'Tokelau',
						 'TKM': 'Turkmenistan',
						 'TLS': 'Timor-Leste',
						 'TON': 'Tonga',
						 'TTO': 'Trinidad and Tobago',
						 'TUN': 'Tunisia',
						 'TUR': 'Turkey',
						 'TUV': 'Tuvalu',
						 'TWN': 'Taiwan, Province of China',
						 'TZA': 'Tanzania, United Republic of',
						 'UGA': 'Uganda',
						 'UKR': 'Ukraine',
						 'UMI': 'United States Minor Outlying Islands',
						 'URY': 'Uruguay',
						 'USA': 'United States',
						 'UZB': 'Uzbekistan',
						 'VAT': 'Holy See (Vatican City State)',
						 'VCT': 'Saint Vincent and the Grenadines',
						 'VEN': 'Venezuela, Bolivarian Republic of',
						 'VGB': 'Virgin Islands, British',
						 'VIR': 'Virgin Islands, U.S.',
						 'VNM': 'Viet Nam',
						 'VUT': 'Vanuatu',
						 'WLF': 'Wallis and Futuna',
						 'WSM': 'Samoa',
						 'XOM': 'Sovereign Military Order of Malta',
						 'XPO': 'Interpol',
						 'XXA': 'Stateless',
						 'XXB': 'Refugee',
						 'XXX': 'Unspecified',
						 'YEM': 'Yemen',
						 'YUG': 'Yugoslavia',
						 'ZAF': 'South Africa',
						 'ZAR': 'Zaire',
						 'ZMB': 'Zambia',
						 'ZWE': 'Zimbabwe'}

	if len(io) == 3:
		iso = io,
		name =  country_codes.get(io)
	else:
		match = process.extractOne(
			region, 
			country_codes.values(), 
			processor=None, 
			scorer=None, 
			score_cutoff=90)
		if match is not None:
			match = [i for i in country_codes.items() if i[1] == match[0]][0]
			iso, name = match
		else:
			iso = None,
			name = io

	response = {
		'ISO': iso,
		'Name': io
	}
	return response

def flatten(df, static_columns = list()):
    if len(static_columns) == 0:
        columns = list()
        for c in df.columns:
            if isinstance(c, int) or c.isdigit():
                columns.append(c)
            else:
                static_columns.append(c)
    else:
        columns = [i for i in df.columns if i not in static_columns]
        columns = [i for i in columns if not (isinstance(i, str) and 'Unnamed' not in i)]
        
    print("Static Columns", static_columns)
    print("Variables: ", columns)
    table = list()
    for index, row in df.iterrows():
        
        line = {c:(row[c].strip() if not isinstance(row[c], float) else row[c]) for c in static_columns}
        for c in columns:
            value = row[c]
            if isinstance(value, str) and value.isdigit():
                value = float(value)
            elif isinstance(value, int): value = float(value)
            elif value == '' or value == ' ': value = math.nan
                

            if math.isnan(value): continue
            new_line = line.copy()
            new_line['Year'] = c
            new_line['Population'] = value
            table.append(new_line)
    
    table = pandas.DataFrame(table)
    return table


if __name__ == "__main__":
	iso_code('a')